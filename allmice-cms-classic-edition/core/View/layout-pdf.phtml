<?php
//require_once('tcpdf/tcpdf.php');

// create new PDF document
$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

// set document information
$pdf->SetCreator(PDF_CREATOR);
$pdf->SetAuthor($pdfInput['author']);
$pdf->SetTitle($pdfInput['title']);
$pdf->SetSubject($pdfInput['subject']);
//$pdf->SetKeywords('TCPDF, PDF, example, test, guide');

// set default header data
//$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE.' 048', PDF_HEADER_STRING);

// set header and footer fonts
$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

// set default monospaced font
$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

// set margins
//$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
//$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
//$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);

// set auto page breaks
$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

// set image scale factor
$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

// set some language-dependent strings (optional)
//if (@file_exists(dirname(__FILE__).'/lang/eng.php')) {
//    require_once(dirname(__FILE__).'/lang/eng.php');
//    $pdf->setLanguageArray($l);
//}
if (@file_exists('misc/vendor/tcpdf/examples/config/lang/est.php')) {
    require_once('misc/vendor/tcpdf/examples/config/lang/est.php');
    $pdf->setLanguageArray($l);
}

// ---------------------------------------------------------

// set font
$pdf->SetFont('helvetica', 'B', 20);

// add a page
//$pdf->AddPage();

//$pdf->Write(0, 'Example of HTML tables', '', 0, 'L', true, 0, false, false, 0);
//$pdf->Write(0, '', '', 0, 'L', true, 0, false, false, 0);

$pdf->SetFont('helvetica', '', 8);

// -----------------------------------------------------------------------------

		$pathModuleView="modules/".$incPart['Name']."/View/";
		$pathModuleView.=($path_info['call_parts'][1]."-pdf.phtml");
//		$pathModuleView.=($path_info['call_parts'][1]."-pdf-test.phtml");

//ob_clean();
$docData[0]=$pathModuleView;
		include ($pathModuleView);

for($i=0;$i<count($docPageData);$i++){
	$pdf->AddPage();
//	if($i==0)
		$pdf->writeHTML($styleData.$docPageData[$i], true, false, true, false, '');
//	else
//		$pdf->writeHTML($docPageData[$i], true, false, true, false, '');
}

//	$pdf->AddPage();
//$pdf->writeHTML("Text on 2nd page.", true, false, false, false, '');

//Close and output PDF document
$pdf->Output('document.pdf', 'I');
?>